{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomar\\\\OneDrive\\\\Desktop\\\\SequelizeDemo\\\\client\\\\src\\\\components\\\\posts\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    getPosts,\n    postReducer: {\n      posts,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  postReducer: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  postReducer: state.postReducer\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","getPosts","Post","postReducer","posts","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/components/posts/Post.js"],"sourcesContent":["import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport { getPosts } from '../../actions/post'\r\nconst Post = ({getPosts,postReducer:{posts,loading}}) => {\r\n    useEffect(() =>{\r\n        getPosts();\r\n    },[getPosts]);\r\n  return (\r\n    <div>Post</div>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n    getPosts:PropTypes.func.isRequired,\r\n    postReducer:PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    postReducer:state.postReducer\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPosts})(Post);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AACA,MAAMC,IAAI,GAAG,QAA4C;EAAA;;EAAA,IAA3C;IAACD,QAAD;IAAUE,WAAW,EAAC;MAACC,KAAD;MAAOC;IAAP;EAAtB,CAA2C;EACrDP,SAAS,CAAC,MAAK;IACXG,QAAQ;EACX,CAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;EAGF,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAPD;;GAAMC,I;;KAAAA,I;AASNA,IAAI,CAACI,SAAL,GAAiB;EACbL,QAAQ,EAACF,SAAS,CAACQ,IAAV,CAAeC,UADX;EAEbL,WAAW,EAACJ,SAAS,CAACU,MAAV,CAAiBD;AAFhB,CAAjB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAI;EAC7BR,WAAW,EAACQ,KAAK,CAACR;AADW,CAAJ,CAA7B;;AAIA,eAAeH,OAAO,CAACU,eAAD,EAAiB;EAACT;AAAD,CAAjB,CAAP,CAAoCC,IAApC,CAAf"},"metadata":{},"sourceType":"module"}