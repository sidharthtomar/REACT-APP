{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nconst alertReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","alertReducer","state","action","type","payload","filter","alert","id"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/reducers/alert.js"],"sourcesContent":["import {SET_ALERT,REMOVE_ALERT} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\n const alertReducer =  (state = initialState,action) =>{\r\n\r\nconst { type, payload } = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state,payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter((alert)=> alert.id !== payload);\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\nexport default alertReducer;"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,YAAlB,QAAqC,kBAArC;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEC,MAAMC,YAAY,GAAI,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBF,YAAuB;EAAA,IAAVG,MAAU;EAEvD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEI,QAAOC,IAAP;IACI,KAAKN,SAAL;MACI,OAAO,CAAC,GAAGI,KAAJ,EAAUG,OAAV,CAAP;;IACJ,KAAKN,YAAL;MACI,OAAOG,KAAK,CAACI,MAAN,CAAcC,KAAD,IAAUA,KAAK,CAACC,EAAN,KAAaH,OAApC,CAAP;;IACJ;MACI,OAAOH,KAAP;EANR;AASH,CAbA;;AAcD,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}