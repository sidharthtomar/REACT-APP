{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/auth';\nexport const Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      console.log(setAlert);\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return;\n};\n\n_s(Register, \"DuW/f6KiXRIcG4CUOyA4qnYPrp0=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","connect","Form","Button","Row","Col","Link","setAlert","PropTypes","register","Register","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/components/auth/register.js"],"sourcesContent":["import React,{Fragment, useState} from 'react'\r\nimport { connect} from 'react-redux';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport PropTypes from 'prop-types';\r\nimport  {register } from '../../actions/auth';\r\n\r\n\r\n\r\n  export const Register = ({setAlert,register}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n\r\n\r\n    const {name,email,password,password2} = formData;\r\n\r\n    const onChange = (e)=>setFormData({...formData,[e.target.name]:e.target.value});\r\n\r\n    const onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        if(password !== password2)\r\n        {\r\n        console.log(setAlert);\r\n        }\r\n        else{\r\n        register({name,email,password});\r\n        }\r\n    };\r\n\r\n  return\r\n\r\n}\r\n  \r\n  Register.propTypes = {\r\n    setAlert:PropTypes.func.isRequired,\r\n    register:PropTypes.func.isRequired\r\n      \r\n    }\r\n   \r\n \r\n \r\n  \r\n  export default connect(null,{ setAlert,register })(Register);"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAIE,OAAO,MAAMC,QAAQ,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAACH,QAAD;IAAUE;EAAV,CAAwB;EAE/C,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;IACrCa,IAAI,EAAC,EADgC;IAErCC,KAAK,EAAC,EAF+B;IAGrCC,QAAQ,EAAC,EAH4B;IAIrCC,SAAS,EAAC;EAJ2B,CAAD,CAAxC;EASA,MAAM;IAACH,IAAD;IAAMC,KAAN;IAAYC,QAAZ;IAAqBC;EAArB,IAAkCL,QAAxC;;EAEA,MAAMM,QAAQ,GAAIC,CAAD,IAAKN,WAAW,CAAC,EAAC,GAAGD,QAAJ;IAAa,CAACO,CAAC,CAACC,MAAF,CAASN,IAAV,GAAgBK,CAAC,CAACC,MAAF,CAASC;EAAtC,CAAD,CAAjC;;EAEA,MAAMC,QAAQ,GAAG,MAAOH,CAAP,IAAW;IACxBA,CAAC,CAACI,cAAF;;IACA,IAAGP,QAAQ,KAAKC,SAAhB,EACA;MACAO,OAAO,CAACC,GAAR,CAAYjB,QAAZ;IACC,CAHD,MAII;MACJE,QAAQ,CAAC;QAACI,IAAD;QAAMC,KAAN;QAAYC;MAAZ,CAAD,CAAR;IACC;EACJ,CATD;;EAWF;AAED,CA5BQ;;GAAML,Q;;KAAAA,Q;AA8BbA,QAAQ,CAACe,SAAT,GAAqB;EACnBlB,QAAQ,EAACC,SAAS,CAACkB,IAAV,CAAeC,UADL;EAEnBlB,QAAQ,EAACD,SAAS,CAACkB,IAAV,CAAeC;AAFL,CAArB;AASA,eAAe1B,OAAO,CAAC,IAAD,EAAM;EAAEM,QAAF;EAAWE;AAAX,CAAN,CAAP,CAAoCC,QAApC,CAAf"},"metadata":{},"sourceType":"module"}