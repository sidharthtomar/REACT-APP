{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomar\\\\OneDrive\\\\Desktop\\\\SequelizeDemo\\\\client\\\\src\\\\components\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    getPost,\n    post: {\n      post\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.postReducer\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","getPost","Posts","post","match","params","id","Post","propTypes","func","isRequired","mapStateToProps","state","postReducer"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/components/post/Post.js"],"sourcesContent":["import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {getPost} from '../../actions/post'\r\nconst Posts = ({getPost,post:{post},match}) => {\r\n    useEffect(()=>{\r\n        getPost(match.params.id);\r\n    },[getPost, match.params.id]);\r\n  return (\r\n    <div>post</div>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost:PropTypes.func.isRequired,\r\n    post:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps =state =>({\r\n    post:state.postReducer\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost}) (Posts)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;;AACA,MAAMC,KAAK,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAACD,OAAD;IAASE,IAAI,EAAC;MAACA;IAAD,CAAd;IAAqBC;EAArB,CAAgC;EAC3CN,SAAS,CAAC,MAAI;IACVG,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;EACH,CAFQ,EAEP,CAACL,OAAD,EAAUG,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFO,CAAT;EAGF,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAPD;;GAAMJ,K;;KAAAA,K;AASNK,IAAI,CAACC,SAAL,GAAiB;EACbP,OAAO,EAACF,SAAS,CAACU,IAAV,CAAeC,UADV;EAEbP,IAAI,EAACJ,SAAS,CAACU,IAAV,CAAeC;AAFP,CAAjB;;AAIA,MAAMC,eAAe,GAAEC,KAAK,KAAI;EAC5BT,IAAI,EAACS,KAAK,CAACC;AADiB,CAAJ,CAA5B;;AAIA,eAAeb,OAAO,CAACW,eAAD,EAAiB;EAACV;AAAD,CAAjB,CAAP,CAAoCC,KAApC,CAAf"},"metadata":{},"sourceType":"module"}