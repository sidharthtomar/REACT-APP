{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomar\\\\OneDrive\\\\Desktop\\\\SequelizeDemo\\\\client\\\\src\\\\components\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getPost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = (_ref, auth, match) => {\n  _s();\n\n  let {\n    getPost,\n    post: {\n      post\n    }\n  } = _ref;\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"the comment page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nPosts.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.postReducer,\n  auth: state.authReducer\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","Link","connect","getPost","Posts","auth","match","post","params","id","propTypes","func","isRequired","object","mapStateToProps","state","postReducer","authReducer"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/components/post/Post.js"],"sourcesContent":["import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport {getPost} from '../../actions/post'\r\n\r\nconst Posts = ({getPost,post:{post}},auth,match) => {\r\n    useEffect(()=>{\r\n        getPost(match.params.id);\r\n    },[getPost]);\r\n  return (\r\n    <Fragment>\r\n        the comment page\r\n    </Fragment>\r\n       \r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPost:PropTypes.func.isRequired,\r\n    auth:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps =state =>({\r\n    post:state.postReducer,\r\n    auth:state.authReducer\r\n})\r\n\r\nexport default connect(mapStateToProps,{getPost}) (Posts)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;;AAEA,MAAMC,KAAK,GAAG,OAAuBC,IAAvB,EAA4BC,KAA5B,KAAsC;EAAA;;EAAA,IAArC;IAACH,OAAD;IAASI,IAAI,EAAC;MAACA;IAAD;EAAd,CAAqC;EAChDR,SAAS,CAAC,MAAI;IACVI,OAAO,CAACG,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAP;EACH,CAFQ,EAEP,CAACN,OAAD,CAFO,CAAT;EAGF,oBACE,QAAC,QAAD;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAVD;;GAAMC,K;;KAAAA,K;AAYNA,KAAK,CAACM,SAAN,GAAkB;EACdP,OAAO,EAACH,SAAS,CAACW,IAAV,CAAeC,UADT;EAEdP,IAAI,EAACL,SAAS,CAACW,IAAV,CAAeC,UAFN;EAGdL,IAAI,EAACP,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAlB;;AAKA,MAAME,eAAe,GAAEC,KAAK,KAAI;EAC5BR,IAAI,EAACQ,KAAK,CAACC,WADiB;EAE5BX,IAAI,EAACU,KAAK,CAACE;AAFiB,CAAJ,CAA5B;;AAKA,eAAef,OAAO,CAACY,eAAD,EAAiB;EAACX;AAAD,CAAjB,CAAP,CAAoCC,KAApC,CAAf"},"metadata":{},"sourceType":"module"}