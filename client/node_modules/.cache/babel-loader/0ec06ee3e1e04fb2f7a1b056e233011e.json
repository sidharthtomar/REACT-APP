{"ast":null,"code":"import { GET_POSTS, POST_ERROR, ADD_POST, GET_POST, ADD_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  comment: null,\n  loading: true,\n  error: {}\n};\n\nconst postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      {\n        return { ...state,\n          posts: [payload, ...state.posts],\n          loading: false\n        };\n      }\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n\n    case ADD_COMMENT:\n      return { ...state,\n        comment: [...state.comment, payload],\n        loading: false\n      };\n  }\n};\n\nexport default postReducer;","map":{"version":3,"names":["GET_POSTS","POST_ERROR","ADD_POST","GET_POST","ADD_COMMENT","initialState","posts","post","comment","loading","error","postReducer","state","action","type","payload"],"sources":["C:/Users/tomar/OneDrive/Desktop/SequelizeDemo/client/src/reducers/post.js"],"sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post :null,\r\n    comment:null,\r\n    loading:true,\r\n    error:{}\r\n}\r\n\r\n\r\nconst  postReducer =(state=initialState,action)=>{\r\n    const { type,payload} = action;\r\n\r\n    switch(type){\r\n        case GET_POSTS:\r\n            return{\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n            case GET_POST:\r\n                return{\r\n                    ...state,\r\n                    post:payload,\r\n                    loading:false\r\n                }\r\n            case ADD_POST:{\r\n                return{\r\n                    ...state,\r\n                    posts:[payload,...state.posts],\r\n                    loading:false\r\n                }\r\n            }\r\n            case POST_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error:payload,\r\n                    loading:false\r\n                }\r\n                default:\r\n                    return state;\r\n            case ADD_COMMENT:\r\n                return{\r\n                    ...state,\r\n                   comment:[ ...state.comment,payload],\r\n                    loading:false\r\n                }\r\n    }\r\n}\r\nexport default postReducer;"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,QAJJ,EAKIC,WALJ,QAMO,kBANP;AASA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,EADW;EAEjBC,IAAI,EAAE,IAFW;EAGjBC,OAAO,EAAC,IAHS;EAIjBC,OAAO,EAAC,IAJS;EAKjBC,KAAK,EAAC;AALW,CAArB;;AASA,MAAOC,WAAW,GAAE,YAA6B;EAAA,IAA5BC,KAA4B,uEAAtBP,YAAsB;EAAA,IAATQ,MAAS;EAC7C,MAAM;IAAEC,IAAF;IAAOC;EAAP,IAAkBF,MAAxB;;EAEA,QAAOC,IAAP;IACI,KAAKd,SAAL;MACI,OAAM,EACF,GAAGY,KADD;QAEFN,KAAK,EAACS,OAFJ;QAGFN,OAAO,EAAC;MAHN,CAAN;;IAKA,KAAKN,QAAL;MACI,OAAM,EACF,GAAGS,KADD;QAEFL,IAAI,EAACQ,OAFH;QAGFN,OAAO,EAAC;MAHN,CAAN;;IAKJ,KAAKP,QAAL;MAAc;QACV,OAAM,EACF,GAAGU,KADD;UAEFN,KAAK,EAAC,CAACS,OAAD,EAAS,GAAGH,KAAK,CAACN,KAAlB,CAFJ;UAGFG,OAAO,EAAC;QAHN,CAAN;MAKH;;IACD,KAAKR,UAAL;MACI,OAAM,EACF,GAAGW,KADD;QAEFF,KAAK,EAACK,OAFJ;QAGFN,OAAO,EAAC;MAHN,CAAN;;IAKA;MACI,OAAOG,KAAP;;IACR,KAAKR,WAAL;MACI,OAAM,EACF,GAAGQ,KADD;QAEHJ,OAAO,EAAC,CAAE,GAAGI,KAAK,CAACJ,OAAX,EAAmBO,OAAnB,CAFL;QAGFN,OAAO,EAAC;MAHN,CAAN;EA7BZ;AAmCH,CAtCD;;AAuCA,eAAeE,WAAf"},"metadata":{},"sourceType":"module"}